name: Frontend - Build & Push to ECR
on:
    push:
        branches: ['main']

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install deps
              run: npm ci

            # 프론트는 상대 경로(/api)로 호출할 것이므로 기본값을 /api로 빌드에 주입
            - name: Build
              env:
                  VITE_API_BASE_URL: /api
              run: npm run build

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build & Push image
              id: build
              env:
                  REGISTRY: ${{ steps.ecr.outputs.registry }}
              run: |
                  set -e
                  APP=today-stock/frontend
                  SHA=$(git rev-parse --short HEAD)
                  IMAGE_SHA=$REGISTRY/$APP:$SHA
                  IMAGE_LATEST=$REGISTRY/$APP:latest

                  docker buildx build \
                    --platform linux/amd64 \
                    --no-cache \
                    -t "$IMAGE_SHA" \
                    -t "$IMAGE_LATEST" \
                    --push .

                  # Output for next step
                  echo "image_tag=$SHA" >> $GITHUB_OUTPUT

            # ArgoCD 배포 저장소 업데이트
            - name: Checkout deploy repository
              uses: actions/checkout@v4
              with:
                  repository: ShinSeoY/today_stock_deploy
                  token: ${{ secrets.GH_PAT }}
                  path: deploy-repo

            - name: Update frontend image tag
              run: |
                  cd deploy-repo/charts/today-stock-app

                  # yq 설치 (YAML 파일 수정 도구)
                  sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
                  sudo chmod +x /usr/local/bin/yq

                  # values.yaml에서 frontend 이미지 태그 업데이트
                  yq eval ".frontend.image.tag = \"${{ steps.build.outputs.image_tag }}\"" -i values.yaml

                  cat values.yaml

            - name: Commit and push changes
              run: |
                  cd deploy-repo
                  git config user.name "GitHub Actions"
                  git config user.email "actions@github.com"

                  git add charts/today-stock-app/values.yaml
                  git commit -m "Update frontend image tag to ${{ steps.build.outputs.image_tag }}" || echo "No changes"
                  git push
